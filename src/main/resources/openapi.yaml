openapi: 3.0.3
info:
  title: CRUD de Usuarios API
  description: API para gestionar usuarios con Spring WebFlux y Angular 19
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor local
paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      operationId: getUsers
      tags:
        - Usuarios
      responses:
        "200":
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Crear un nuevo usuario
      operationId: createUser
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        "201":
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      operationId: getUserById
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      operationId: updateUser
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        "200":
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario
      operationId: deleteUser
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Usuario eliminado exitosamente
        "404":
          description: Usuario no encontrado
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        rut:
          type: string
          maxLength: 15
        dv:
          type: string
          maxLength: 1
        birthDate:
          type: string
          format: date
        emailAddress:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 255
    UserCreate:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        rut:
          type: string
          maxLength: 15
        dv:
          type: string
          maxLength: 1
        birthDate:
          type: string
          format: date
        emailAddress:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 255
    UserUpdate:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        emailAddress:
          type: string
          format: email
          maxLength: 255